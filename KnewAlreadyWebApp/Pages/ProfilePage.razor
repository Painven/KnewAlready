@page "/profile"
@using AutoMapper
@attribute [Authorize]

<PageTitle>Настройки пользователя</PageTitle>



<div class="container">
    <div class="profile-box">
        <h1>
            Профиль
            <button class="btn btn-lg btn-warning p-3 mt-3 d-nline" type="button" @onclick="Logout">
                <span class="oi oi-account-logout"></span>
            </button>
        </h1>

        <div>
            <img src="/assets/images/user.png" />
            <label for="username">Имя пользователя</label>
            <input type="text" class="form-control" id="username" readonly @bind="contextUser.Username" />
        </div>
        <div>
            <img src="/assets/images/email.png" />
            <label for="email">Email (для уведомлений)</label>
            <input type="text" class="form-control" id="email" @bind="contextUser.Email" />
            @if (!contextUser.IsEmailConfirmed)
            {

                @if (isEmailCodeSended)
                {
                    <p>Код отправлен</p>
                }
                else if (!string.IsNullOrWhiteSpace(contextUser.Email))
                {
                    <div class="add-info">
                        <button class="btn btn-primary d-inline" @onclick="SendEmailVerifyingCodeAsync">
                            Email ящик не подтвержден!. Отправить код подтверждения
                        </button>
                    </div>
                }

            }
        </div>
        <div>
            <img src="/assets/images/telegram.png" />
            <label for="telegram">Telegram (для уведомлений)</label>
            <input type="text" class="form-control" id="telegram" @bind="contextUser.Telegram" />
            <p>Адрес бота: <a href="https://t.me/painven_knewalready_bot" target="_blank">https://t.me/painven_knewalready_bot</a></p>
        </div>
        <div>
            <button class="btn btn-lg btn-success p-3 mt-3 w-100" type="button" @onclick="SaveUserProfileChanges">
                <span class="oi oi-check"></span>
                Сохранить
            </button>
        </div>
    </div>
</div>

@code {
    [Inject] public SuggestApiSwaggerClient apiClient { get; set; }
    [Inject] public AuthenticationStateProvider authStateProvider { get; set; }
    [Inject] public IMapper mapper { get; set; }

    [CascadingParameter] public AppUser loginedUser { get; set; }
    private AppUser contextUser = new AppUser();
    private bool isEmailCodeSended;

    private async Task SaveUserProfileChanges()
    {
        var dto = mapper.Map<UpdateUserDto>(contextUser);
        await apiClient.UpdateProfileAsync(dto);
    }

    protected override void OnParametersSet()
    {
        if (loginedUser != null)
        {
            contextUser = mapper.Map<AppUser>(loginedUser);
        }
    }

    private async Task Logout()
    {
        await ((CustomAuthProvider)authStateProvider).Logout();
    }

    private async Task SendEmailVerifyingCodeAsync()
    {
        await apiClient.SendEmailVirifyCodeAsync();
        isEmailCodeSended = true;
    }
    }
