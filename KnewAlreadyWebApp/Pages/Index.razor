@page "/"
@inject KnewAlreadyApiHttpClient apiClient

<PageTitle>Index</PageTitle>


<h2>Все запросы</h2>
<div class="table-responsive">
    <table class="table table-bordered table-dark">
        <thead>
            <tr>
                <th>ID</th>
                <th>Создан</th>
                <th>Длительность</th>
                <th>Инициатор (API)</th>
                <th>Партнер</th>                
                <th>Категория</th>                
                <th>status</th>                
            </tr>
        </thead>
        <tbody>
            @if(data == null)
            {
                <tr colspan="7">Загрузка ...</tr>
            }
            else
            {
                foreach(var item in data)
                {
                     <tr>
                        <td>@item.Id</td>
                        <td>@item.Created</td>
                        <td>@item.LifeTime</td>
                        <td>@item.InitiatorUserId</td>
                        <td>@item.AcceptorUserId ?? "-"</td>                
                        <td>@item.CategoryName</td>  
                        <td>status icon</td>  
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    List<SuggestActionItemDto> data = null;
    System.Timers.Timer refreshTimer = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        refreshTimer = new();
        refreshTimer.Interval = (int)System.TimeSpan.FromSeconds(3).TotalMilliseconds;
        refreshTimer.Elapsed += async (o, e) => await LoadData();
    }

    private async Task LoadData()
    {
        var lastId = (data?.Count ?? 0) > 0 ? data.Max(r => r.Created) : (DateTimeOffset?)null;

        data = (await apiClient.SuggestActionsAllAsync()).ToList();
        if (!lastId.HasValue || data.Max(r => r.Created) != lastId)
        {
            InvokeAsync(StateHasChanged);
        }
    }
}