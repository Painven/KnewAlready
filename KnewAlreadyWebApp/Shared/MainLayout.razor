@using AutoMapper
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inherits LayoutComponentBase
@implements IDisposable

<PageTitle>KnewAlreadyWebApp</PageTitle>

<CascadingValue Value="@loginedUser">
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div id="main-content" class="container">
                @Body
            </div>
        </main>
    </div>
</CascadingValue>


<style>
    main {
        background: url('/assets/images/nature-wallpaper-3721894.jpg');
        background-size: cover;
    }

        main .container {
            max-width: 1600px;
        }
</style>

@code {
    [Inject] public AuthenticationStateProvider authStateProvider { get; set; }
    [Inject] public SuggestApiSwaggerClient apiClient { get; set; }
    [Inject] public IMapper mapper { get; set; }

    public AppUser loginedUser;

    protected override async Task OnInitializedAsync()
    {
        authStateProvider.AuthenticationStateChanged += ChangeLoginedUser;
        await authStateProvider.GetAuthenticationStateAsync();
    }

    private async void ChangeLoginedUser(Task<AuthenticationState> authState)
    {
        var state = await authState;
        if (state?.User?.Identity?.Name != "anonymous")
        {
            string? sid = state?.User?.Claims?.FirstOrDefault(c => c.Type.EndsWith("/sid"))?.Value;
            var userDto = await apiClient.GetUserInfoAsync(sid);
            loginedUser = mapper.Map<AppUser>(userDto);
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        authStateProvider.AuthenticationStateChanged -= ChangeLoginedUser;
    }

}